package com.niuwa.my

import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.os.Bundle
import android.support.wearable.activity.WearableActivity
import android.util.Base64
import com.niuwa.api.ApiResponse
import com.niuwa.MainApplication
import com.niuwa.R
import com.niuwa.api.RetrofitClient
import kotlinx.android.synthetic.main.activity_join_us.*
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import java.io.IOException
import java.io.InputStream
import java.net.HttpURLConnection
import java.net.MalformedURLException
import java.net.URL


class JoinUsActivity : WearableActivity() {
    var imageUrl = ""
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_join_us)
//        if (Build.VERSION.SDK_INT > 9) {
//            val policy = StrictMode.ThreadPolicy.Builder().permitAll().build()
//            StrictMode.setThreadPolicy(policy)
//        }
        // Enables Always-on
        setAmbientEnabled()

        img_qrcode.setImageBitmap(convertStringToIcon(imageUrl))
        val app = application as MainApplication
        val requestService = RetrofitClient().create()
        requestService.getQRCode(app.getUserId()).enqueue(object :
            Callback<ApiResponse<QRCodeBean>> {
            override fun onResponse(
                call: Call<ApiResponse<QRCodeBean>>,
                response: Response<ApiResponse<QRCodeBean>>
            ) {
//                img_qrcode.setImageBitmap(convertStringToIcon(response.body()?.data?.QRCode));
            }

            override fun onFailure(call: Call<ApiResponse<QRCodeBean>>, t: Throwable) {

            }
        })


    }
    fun convertStringToIcon(output: String?): Bitmap? {
// OutputStream out;
        var bitmap: Bitmap? = null
        return try {
            val bitmapArray: ByteArray
            bitmapArray = Base64.decode(output, Base64.DEFAULT)
            bitmap = BitmapFactory.decodeByteArray(
                bitmapArray, 0,
                bitmapArray.size
            )
            // bitmap.compress(Bitmap.CompressFormat.PNG, 100, out);
            bitmap
        } catch (e: Exception) {
            null
        }
    }
    fun returnBitMap(url: String?): Bitmap? {
        var myFileUrl: URL? = null
        var bitmap: Bitmap? = null
        try {
            myFileUrl = URL(url)
        } catch (e: MalformedURLException) {
            e.printStackTrace()
        }
        try {
            val conn: HttpURLConnection = myFileUrl?.openConnection() as HttpURLConnection
            conn.setDoInput(true)
            conn.connect()
            val `is`: InputStream = conn.getInputStream()
            bitmap = BitmapFactory.decodeStream(`is`)
            `is`.close()
        } catch (e: IOException) {
            e.printStackTrace()
        }
        return bitmap
    }
}